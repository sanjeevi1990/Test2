<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:mvf="clr-namespace:Microsoft.VisualBasic.FileIO;assembly=Microsoft.VisualBasic"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OrchestratorQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:Annotation.AnnotationText="-- Share Point Workflow--" DisplayName="General Business Process" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap2010:WorkflowViewState.IdRef="State_2">
        <State.Entry>
          <TryCatch DisplayName="Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Init State" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="ui:GenericValue" Name="config_File_Path" />
                  <Variable x:TypeArguments="ss:SecureString" Name="SPPasswordSecurestring" />
                </Sequence.Variables>
                <Assign DisplayName="Initialize SystemError" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Config_File_Path" DisplayName="Get Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                  <ui:GetRobotAsset.Value>
                    <OutArgument x:TypeArguments="ui:GenericValue">[config_File_Path]</OutArgument>
                  </ui:GetRobotAsset.Value>
                </ui:GetRobotAsset>
                <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[config_File_Path]</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Sequence sap2010:Annotation.AnnotationText="Save job arguments with values to Config, using the argument's name as keyname. " DisplayName="Save job arguments Config" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <If Condition="[Not string.IsNullOrEmpty(OrchestratorQueueName)]" DisplayName="OrchestratorQueueName" sap2010:WorkflowViewState.IdRef="If_9">
                          <If.Then>
                            <Assign DisplayName="Add OrchestratorQueueName" sap2010:WorkflowViewState.IdRef="Assign_19">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[OrchestratorQueueName]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="// If the argument has no value, do not overwrite config. This provides backward compatibility with &lt; 2018.3 and allows default values to come from the Config.xlsx" />
                          </If.Else>
                        </If>
                      </Sequence>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Log Fields" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                        <ui:AddLogFields.Fields>
                          <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                        </ui:AddLogFields.Fields>
                      </ui:AddLogFields>
                    </Sequence>
                  </If.Then>
                </If>
                <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[Config(&quot;Outlook_Credentials_Asset_Name&quot;).ToString]" DisplayName="Get Credential outlook" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[SPPasswordSecurestring]" Username="[SPUsername]" />
                <Assign DisplayName="Assign Password" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[SPPassword]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[new system.Net.NetworkCredential("",SPPasswordSecurestring).Password]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_3">
            <Transition.To>
              <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                <State.Entry>
                  <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_4">
                    <TryCatch.Try>
                      <Sequence DisplayName="End of process activities" sap2010:WorkflowViewState.IdRef="Sequence_20">
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Fatal" Message="[&quot;System error at initialization: &quot; + SystemError.Message + &quot; at Source: &quot; + SystemError.Source]" />
            </Transition.Action>
            <Transition.Condition>[SystemError isNot Nothing]</Transition.Condition>
          </Transition>
          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_2">
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. For System Error, it can be retried." DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="State_3">
                <State.Entry>
                  <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <Sequence DisplayName="Process the current TransactionItem" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence DisplayName="Copy Audit log to share drive" sap2010:WorkflowViewState.IdRef="Sequence_25">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="ui:GenericValue" Name="a" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="b" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="c" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="audit_Log_Path" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="shard_AuditLog" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="repalced_AuditLog_Name" />
                          </Sequence.Variables>
                          <Sequence DisplayName="Get the data from audit 2 and paste it in audit 1 Sequence" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="audit_log_2_dt" />
                              <Variable x:TypeArguments="ui:GenericValue" Name="audit_1_row_count" />
                              <Variable x:TypeArguments="sd:DataTable" Name="audit_Log_1_dt" />
                              <Variable x:TypeArguments="sd:DataTable" Name="Merged_Audit_Log_dt" />
                            </Sequence.Variables>
                            <ui:Delete ContinueOnError="True" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[Config(&quot;Merged Audit Log&quot;).ToString]" />
                            <ui:ReadRange AddHeaders="True" DataTable="[audit_Log_1_dt]" DisplayName="Read Range audit log" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Processing_Log" WorkbookPath="[Config(&quot;jv_Processing_Tracker&quot;).ToString]">
                              <ui:ReadRange.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:ReadRange.Range>
                            </ui:ReadRange>
                            <ui:WriteRange AddHeaders="True" DataTable="[audit_Log_1_dt]" DisplayName="Write Range - audit 2 to audit 1" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[Config(&quot;Merged Audit Log&quot;).ToString]">
                              <ui:WriteRange.StartingCell>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:WriteRange.StartingCell>
                            </ui:WriteRange>
                            <ui:ReadRange AddHeaders="True" DataTable="[Merged_Audit_Log_dt]" DisplayName="Read Range audit log" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Sheet1" WorkbookPath="[Config(&quot;Merged Audit Log&quot;).ToString]">
                              <ui:ReadRange.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:ReadRange.Range>
                            </ui:ReadRange>
                            <Assign DisplayName="Assign - row count" sap2010:WorkflowViewState.IdRef="Assign_20">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:GenericValue">[audit_1_row_count]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:GenericValue">[Merged_Audit_Log_dt.Rows.Count + 2]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                              <TryCatch.Try>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                                  <ui:ReadRange AddHeaders="True" DataTable="[audit_log_2_dt]" DisplayName="Read Range audit log 2" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="Processing_Log" WorkbookPath="[Config(&quot;jv_Processing_Tracker_2&quot;).ToString]">
                                    <ui:ReadRange.Range>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </ui:ReadRange.Range>
                                  </ui:ReadRange>
                                  <ui:WriteRange AddHeaders="False" DataTable="[audit_log_2_dt]" DisplayName="Write Range - audit 2 to audit 1" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Sheet1" StartingCell="[&quot;A&quot;+audit_1_row_count]" WorkbookPath="[Config(&quot;Merged Audit Log&quot;).ToString]" />
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <ui:ReadRange AddHeaders="True" DataTable="[Merged_Audit_Log_dt]" DisplayName="Read Range audit log" sap2010:WorkflowViewState.IdRef="ReadRange_5" SheetName="Sheet1" WorkbookPath="[Config(&quot;Merged Audit Log&quot;).ToString]">
                              <ui:ReadRange.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:ReadRange.Range>
                            </ui:ReadRange>
                            <Assign DisplayName="Assign - row count" sap2010:WorkflowViewState.IdRef="Assign_24">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:GenericValue">[audit_1_row_count]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:GenericValue">[Merged_Audit_Log_dt.Rows.Count + 2]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                              <TryCatch.Try>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="audit_log_3_dt" />
                                  </Sequence.Variables>
                                  <ui:ReadRange AddHeaders="True" DataTable="[audit_log_3_dt]" DisplayName="Read Range audit log 2" sap2010:WorkflowViewState.IdRef="ReadRange_6" SheetName="Processing_Log" WorkbookPath="[Config(&quot;jv_Processing_Tracker_3&quot;).ToString]">
                                    <ui:ReadRange.Range>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </ui:ReadRange.Range>
                                  </ui:ReadRange>
                                  <ui:WriteRange AddHeaders="False" DataTable="[audit_log_3_dt]" DisplayName="Write Range - audit 2 to audit 1" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Sheet1" StartingCell="[&quot;A&quot;+audit_1_row_count]" WorkbookPath="[Config(&quot;Merged Audit Log&quot;).ToString]" />
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Sequence>
                          <Assign DisplayName="Assign - Audit Path" sap2010:WorkflowViewState.IdRef="Assign_21">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[audit_Log_Path]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[Config("local_Path_Audit_Log").ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - Shared drive path" sap2010:WorkflowViewState.IdRef="Assign_22">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[shard_AuditLog]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[Config("Local_Path_to_Shared_Path").ToString+"Audit Log\"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - New Audit name" sap2010:WorkflowViewState.IdRef="Assign_23">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[repalced_AuditLog_Name]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[Config("Local_Path_to_Shared_Path").ToString+"Audit Log\Audit Log " +datetime.Now.ToString("dd_MMM_yyyy - HH_mm")+".xlsx"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                            <TryCatch.Try>
                              <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[shard_AuditLog]" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Audit Log is being used by other process&quot;]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[shard_AuditLog]" />
                          <InvokeMethod DisplayName="Invoke Method To Copy Folder Inside 'Success' folder In Shared Drive" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
                            <InArgument x:TypeArguments="x:String">[audit_Log_Path]</InArgument>
                            <InArgument x:TypeArguments="x:String">[shard_AuditLog]</InArgument>
                          </InvokeMethod>
                          <InvokeMethod DisplayName="Invoke Method -  rename audit log file" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Move" TargetType="si:Directory">
                            <InArgument x:TypeArguments="x:String">[shard_AuditLog+"Audit Log.xlsx"]</InArgument>
                            <InArgument x:TypeArguments="x:String">[repalced_AuditLog_Name]</InArgument>
                          </InvokeMethod>
                        </Sequence>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Upload Audit Log&quot;]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="SharePoint_UploadFile.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="SharePointURL">[Config("SharePointURL").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="RelativeURL">[Config("RelativeURL").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="LocalFilePath">[Config("LocalFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="SPUsername">[SPUsername]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="SPPassword">[SPPassword]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="FileName">[Config("FileName").ToString]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Audit Log file uploaded to one drive&quot;]" />
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
                <State.Transitions>
                  <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_7" To="{x:Reference __ReferenceID0}">
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
                  </Transition>
                  <Transition DisplayName="Error" sap2010:WorkflowViewState.IdRef="Transition_4" To="{x:Reference __ReferenceID0}" Condition="[SystemError IsNot Nothing]" />
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
            </Transition.Action>
            <Transition.Condition>[SystemError is Nothing]</Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
      <Variable x:TypeArguments="x:String" Name="SPUsername" />
      <Variable x:TypeArguments="x:String" Name="SPPassword" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d0lEOlxLdW11ZGhhIERlc2t0b3BcSkVQUCBNYXlcSkVQUCBTaGFyZVBvaW50IGFuZCBNZXJnZSBBdWRpdCBMb2dcTWFpbi54YW1soQFVA+ADEgIBAdUDM9UDNgMB3wHXAzPXAzYDAd4B3gEPxAMXAgFPtgEP1QEXAgFCVwfMAw8CAQLgARO5Ax4CAVfAAyvAA0cCAVW+Axe+A8gBAgFTwgOOAcIDqwECAVG4ARPTAR4CAURZC7EBFgIBDtoBI9oBPgIBC9gBD9gB9gECAQfJAyPJAzsCAQXHAw/HA50BAgEE4gEXlwMiAgFinwMbpgMkAgFdrgMbtQMkAgFYvgOFAb4DxQECAVS6ARfAASICAUzIARvPASYCAUVbD54BGgIBFKYBE60BHAIBD9gBfdgB8wECAQjjARnqASIDAdoB6wEZigMkAgF1iwMZiwOqAQIBc4wDGZUDMQIBZZYDGZYDvgECAWOkA1akA2ECAWChA1ehA24CAV6zA0mzA1QCAVuwA0qwA1cCAVm7ARm/ATECAU3JAR3JAYECAgFIygEdzgE1AgFGYBFnGgIBPmgRbCQCATptEZQBFgIBIZUBEZUBoQICARqWARGdARoCARWrAUGrAUwCARKoAUKoAU8CARDoAVToAV0DAd0B5QFV5QFsAwHbAfQBG9kCJgMBkQHaAhvhAiQDAYwB4gIb6QIkAwGHAeoCG/ECJAMBgwHyAhuAAyYCAX6BAxuBA7cBAgF8ggMbhQMqAgF5hgMbiQMqAgF2iwOHAYsDpwECAXSPA1iPA3gCAXGOA1qOA3wCAW+QA1qQA3wCAW2RA1eRA2MCAWuTA1WTA3ICAWmSA1eSA2MCAWeMA9QBjAPwAQIBZpYDhwGWA7sBAgFkuwHVAbsB+gECAU7JAYsByQH+AQIBScoB1QHKAfYBAgFHZT9lSAIBQWJAYk0CAT9qRGpWAgE8aEJoVAIBO20fbTQCASJvFZIBIAIBJJUBR5UBhgECAR+VAZAClQGeAgIBHZUB7AGVAYYCAgEbmwE8mwGCAQIBGJgBPZgBSQIBFvsBHfsBowEDAdYB/AEdggIsAwHPAYMCHYkCLQMByAGKAh2QAiwDAcEBkQIdmAImAwG9AZkCHa8CKAMBrQGwAh22AiwDAaYBtwIdvgImAwGiAb8CHdgCKAMBkgHfAk3fAnYDAY8B3AJO3AJeAwGNAecCTecCiAEDAYoB5AJO5AJeAwGIAe8CTe8CyAEDAYYB7AJO7AJmAwGEAfQCH/QCigEDAYEB/AIj/ALMAQIBf4EDogGBA7QBAgF9hANEhANUAgF7gwNEgwNUAgF6iANEiANcAgF4hwNEhwNlAgF3cBd2LwIBNHcXhwEiAgEqiAEXjAEvAgEojQEXkQEpAgEl+wE4+wE+AwHZAfsBb/sBoAEDAdcB/AFH/AFZAwHUAf8BI/8BUgMB0wH8AbUB/AHFAQMB0gH8AdMB/AGJAgMB0AGGAiOGAlIDAc4BgwJIgwJaAwHMAYMCwwGDAssBAwHLAYMC2QGDAooCAwHJAYoCR4oCXgMBxgGNAiONAlIDAcUBigK6AYoCwgEDAcQBigLQAYoCgQIDAcIBlgJPlgJzAwHAAZMCUJMCYwMBvgGbAiGkAiwDAa4BsAJHsAJeAwGrAbMCI7MCUgMBqgGwAroBsALCAQMBqQGwAtABsAKBAgMBpwG8Ak+8AnMDAaUBuQJQuQJjAwGjAcECIc0CLAMBkwH0AnX0AocBAwGCAfwCkQH8AskBAwGAAXRwdHgCAThwzwFw7wECATdzXHN3AgE2clhyagIBNXgZhgEeAgEriAHQAYgB8QECASmPAWOPAZABAgEmnAIjogIyAwG2AaMCI6MCxQIDAa8BxQIjywIyAwGbAcwCI8wCxQIDAZQBeCd4WgIBLHodgQEmAgEvhAEdhAGFAgIBLpwCTZwCXwMBuwGfAimfAlgDAboBnAK9AZwCzQEDAbkBnALbAZwCkwIDAbcBowLgAaMCgwIDAbUBowJPowJhAwGzAaMCygGjAtIBAwGyAaMCkQKjAsICAwGwAcUCTcUCXwMBoAHIAinIAlgDAZ8BxQK9AcUCzQEDAZ4BxQLbAcUCkwIDAZwBzALgAcwCgwIDAZoBzAJPzAJhAwGYAcwCygHMAtIBAwGXAcwCkQLMAsICAwGVAX9If18CATJ8SXxqAgEw</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="314,112" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="581,260">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="314,123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddLogFields_1" sap:VirtualizedContainerService.HintSize="314,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,590">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRobotCredential_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="486,1186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="490,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="504,1413">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="400,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="414,573" />
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="124,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">73,188.5</av:Point>
            <av:Size x:Key="ShapeSize">124,104</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">110</x:Double>
            <x:Double x:Key="StateContainerHeight">26</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="430,507">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">391.3,97.3 391.3,127.3 129.16,127.3 129.16,188.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="462,60" />
      <sap2010:ViewStateData Id="Delete_2" sap:VirtualizedContainerService.HintSize="418,22" />
      <sap2010:ViewStateData Id="ReadRange_2" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="WriteRange_1" sap:VirtualizedContainerService.HintSize="418,115" />
      <sap2010:ViewStateData Id="ReadRange_3" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="ReadRange_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WriteRange_2" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="336,366">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="418,593">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_5" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="ReadRange_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WriteRange_3" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="336,366">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="418,593" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="440,2148">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="440,287">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="440,22" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="440,132" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="440,132" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="462,3305">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="462,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="462,87" />
      <sap2010:ViewStateData Id="LogMessage_27" sap:VirtualizedContainerService.HintSize="462,91" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="484,3918">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="400,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="414,313">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">285,465.2 135,465.2 135,292.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">45</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_4" sap:VirtualizedContainerService.HintSize="430,507">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">348.3,522 348.3,552 91.6,552 91.6,292.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">11</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="211,142">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">285,380</av:Point>
            <av:Size x:Key="ShapeSize">211,142</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34.080000000000041</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="430,244">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">391.5,96.5 391.5,126.5 526,126.5 526,458.1 496,458.1</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="234,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,8.5</av:Point>
            <av:Size x:Key="ShapeSize">234,88</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="786,771">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">70,12.5</av:Point>
            <x:Double x:Key="StateContainerWidth">772</x:Double>
            <x:Double x:Key="StateContainerHeight">708</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">130,50 160,50 160,52.5 274.5,52.5</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main2_1" sap:VirtualizedContainerService.HintSize="826,891" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>